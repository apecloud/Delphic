version: '3'

volumes:
  delphic_local_postgres_data: {}
  delphic_local_qdrant_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: delphic_local_django
    container_name: delphic_local_django
    depends_on:
      - postgres
      - redis
      - qdrant
#      - model
    volumes:
      - .:/app:z
      - /root/.cache:/root/.cache
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    environment:
      REQUIRE_EMBEDDING_MODEL: "True"
      REQUIRE_INFERENCE_MODEL: "True"
    ports:
      - "8000:8000"
    command: /start
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

#  model:
#    image: delphic_local_django
#    container_name: delphic_local_model
#    volumes:
#      - .:/app:z
#      - /root/.cache:/root/.cache
#    ports:
#      - "8000:8000"
#    entrypoint: /start-model
#    #    command: ["sleep", "1000000"]
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: 1
#              capabilities: [ gpu ]

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    image: delphic_local_frontend
    container_name: delphic_local_frontend
    network_mode: host
    depends_on:
      - django
    env_file:
      - ./frontend/.env
    ports:
      - "3000:3000"
    profiles: ["fullstack"]

  postgres:
    image: postgres:14
    container_name: delphic_local_postgres
    volumes:
      - delphic_local_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: redis:6
    container_name: delphic_local_redis

  qdrant:
    image: qdrant/qdrant
    container_name: delphic_local_qdrant
    volumes:
      - delphic_local_qdrant_data:/qdrant/storage

  celeryworker:
    image: delphic_local_django
    container_name: delphic_local_celeryworker
    depends_on:
      - redis
      - postgres
      - qdrant
    volumes:
      - .:/app:z
      - /root/.cache:/root/.cache
    ports: []
    command: /start-celeryworker
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

  celerybeat:
    image: delphic_local_django
    container_name: delphic_local_celerybeat
    depends_on:
      - redis
      - postgres
      - django
    ports: []
    command: /start-celerybeat
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres

  flower:
    image: delphic_local_django
    container_name: delphic_local_flower
    ports:
      - "5555:5555"
    command: /start-flower
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
